/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.ADCategoria;
import AccesoDatos.ADPoblacion;
import Entidades.Categoria;
import Entidades.Informe_GPxP;
import Entidades.Poblacion;
import Entidades.Procedimiento;
import Herramientas.Periodo;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Keylor
 */
public class Tareas_GastoProcPac extends javax.swing.JPanel {

    private CargarInforme ori;
    private ArrayList<Categoria> categoriasElegidas;
    private ArrayList<Informe_GPxP> informe;
    private List<Poblacion> poblaciones;
    private Poblacion pobl;
    private boolean fechasListas = false;
    private Date fechaDesde;
    private Date fechaHasta;
    private String ModoBeneficio = "No validar";

    /**
     * Creates new form Tareas_GastoProcPac
     */
    public Tareas_GastoProcPac(CargarInforme origen) {
        initComponents();
        ori = origen;
        informe = new ArrayList<>();
        categoriasElegidas = new ArrayList<Categoria>();
        cargarPoblaciones();
        btnBeneficios.setVisible(false);
        establecerBeneficio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        boxPoblacion = new javax.swing.JComboBox<>();
        btnCategorias = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        btnBeneficios = new javax.swing.JButton();
        btnCiclos = new javax.swing.JButton();
        btnResumen = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gasto y procedimientos por paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        setMaximumSize(new java.awt.Dimension(978, 100));
        setMinimumSize(new java.awt.Dimension(978, 100));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(978, 100));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Seleccione poblaci√≥n:");

        boxPoblacion.setMaximumSize(new java.awt.Dimension(155, 30));
        boxPoblacion.setMinimumSize(new java.awt.Dimension(155, 30));
        boxPoblacion.setPreferredSize(new java.awt.Dimension(155, 30));
        boxPoblacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxPoblacionItemStateChanged(evt);
            }
        });

        btnCategorias.setText("Marcar categorias");
        btnCategorias.setMaximumSize(new java.awt.Dimension(135, 35));
        btnCategorias.setMinimumSize(new java.awt.Dimension(135, 35));
        btnCategorias.setPreferredSize(new java.awt.Dimension(135, 35));
        btnCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriasActionPerformed(evt);
            }
        });

        btnGenerar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnGenerar.setText("Generar Informe");

        btnBeneficios.setText("Beneficio");
        btnBeneficios.setMaximumSize(new java.awt.Dimension(83, 35));
        btnBeneficios.setMinimumSize(new java.awt.Dimension(83, 35));
        btnBeneficios.setPreferredSize(new java.awt.Dimension(83, 35));
        btnBeneficios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeneficiosActionPerformed(evt);
            }
        });

        btnCiclos.setText("Seleccionar fechas");
        btnCiclos.setMaximumSize(new java.awt.Dimension(135, 35));
        btnCiclos.setMinimumSize(new java.awt.Dimension(135, 35));
        btnCiclos.setPreferredSize(new java.awt.Dimension(135, 35));
        btnCiclos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCiclosActionPerformed(evt);
            }
        });

        btnResumen.setText("Resumen Informe");
        btnResumen.setMaximumSize(new java.awt.Dimension(83, 35));
        btnResumen.setMinimumSize(new java.awt.Dimension(83, 35));
        btnResumen.setPreferredSize(new java.awt.Dimension(83, 35));
        btnResumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResumenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBeneficios, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155)
                .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBeneficios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriasActionPerformed
        cargarCategorias();
    }//GEN-LAST:event_btnCategoriasActionPerformed

    private void btnBeneficiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeneficiosActionPerformed
        String[] opciones = {"No validar", "Con beneficio (4-5)", "Sin beneficio (0-3)"};

        String seleccion = (String) JOptionPane.showInputDialog(ori, "Seleccione el filtro a aplicar",
                "Seleccione el filtro de beneficio", JOptionPane.INFORMATION_MESSAGE, null,
                opciones, opciones[0]);
        if (seleccion != null) {
            ModoBeneficio = seleccion;
        }
    }//GEN-LAST:event_btnBeneficiosActionPerformed


    private void boxPoblacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxPoblacionItemStateChanged
        establecerBeneficio();
    }//GEN-LAST:event_boxPoblacionItemStateChanged

    private void btnCiclosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCiclosActionPerformed
        if (fechasListas == false) {
            fechaDesde = new Date();
            fechaHasta = new Date();
            MarcarCiclo mc = new MarcarCiclo(fechaDesde, fechaHasta, this, 0);
            mc.setLocationRelativeTo(ori);
            mc.setVisible(true);
        } else {
            MarcarCiclo mc = new MarcarCiclo(fechaDesde, fechaHasta, this, 0);
            mc.setLocationRelativeTo(ori);
            mc.setVisible(true);
        }
    }//GEN-LAST:event_btnCiclosActionPerformed

    private void btnResumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResumenActionPerformed
        String resumen = "";
        Periodo p = new Periodo();
        if (fechasListas == true) {
            resumen = resumen + "\n Fecha inicial:\n" + "   " + p.getFecha(fechaDesde, 2)
                    + "\n Fecha Finalizaci√≥n:\n" + "   " + p.getFecha(fechaHasta, 2) + "\n";
        } else {
            resumen = resumen + "\n Fecha inicial:   No seleccionada."
                    + "\n Fecha Finalizaci√≥n:   No seleccionada.\n";
        }
        resumen = resumen + "\n Poblaci√≥n seleccionada:  "
                + boxPoblacion.getSelectedItem() + "\n";

        if (categoriasElegidas != null) {
            resumen = resumen + "\n Categorias seleccionadas: " + 
                    categoriasElegidas.size() + ".\n";
            if (categoriasElegidas.size() > 0) {
                for (Categoria ce : categoriasElegidas) {
                    resumen = resumen + "  ->" + ce.getNombre() + "\n";
                }
                resumen = resumen + "\n";
            }
        }
        if (pobl.getBecado() == true) {
            resumen = resumen + "\n Modo de beneficio:  " + ModoBeneficio + "\n";
        }
        JOptionPane.showMessageDialog(ori, resumen, "Resumen de informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnResumenActionPerformed

    private void establecerBeneficio() {
        if (boxPoblacion.getItemCount() > 0) {
            int item = boxPoblacion.getSelectedIndex();
            pobl = poblaciones.get(item);
            if (pobl.getBecado() == true) {
                btnBeneficios.setVisible(true);
            } else {
                btnBeneficios.setVisible(false);
            }
        }
    }

    private void cargarCategorias() {
        ADCategoria acceso = new ADCategoria();
        ArrayList<Categoria> list = acceso.obtenerCategorias();
        MarcarCategorias mc = new MarcarCategorias(list, categoriasElegidas, this, 0);
        mc.setLocationRelativeTo(ori);
        mc.setVisible(true);
    }

    private void cargarPoblaciones() {
        ADPoblacion acceso = new ADPoblacion();
        poblaciones = acceso.ConsultarPoblacion();
        for (Poblacion p : poblaciones) {
            boxPoblacion.addItem(p.getNombre());
        }
    }

    public void setCategorias(ArrayList<Categoria> lista) {
        try {
            categoriasElegidas = lista;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ori, "Error al almacenar las categorias seleccionadas", "Error al almacenar categorias", 0);
            Herramientas.InformeErrores.getInforme().escribirError(e, "Tareas_GastoProcPac", "Al guardar las categorias");
        }
    }

    public void setFechas(Date desde, Date hasta) {
        try {
            fechaDesde = desde;
            fechaHasta = hasta;
            fechasListas = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ori, "Error con las fechas del ciclo", "Error al recibir el ciclo", 0);
            Herramientas.InformeErrores.getInforme().escribirError(e, "Tareas_GastoProcPac", "Al guardar las fechas");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxPoblacion;
    private javax.swing.JButton btnBeneficios;
    private javax.swing.JButton btnCategorias;
    private javax.swing.JButton btnCiclos;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnResumen;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
