/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.*;
import Entidades.Categoria;
import Entidades.Procedimiento;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Keylor
 */

public class ConfigCatProc extends javax.swing.JPanel {

    private ADCategoria access = new ADCategoria();
    private ArrayList<Categoria> listaCompleta;
    private Categoria seleccionado;
    private Procedimiento editable;
    //Variable que determina si se esta agregando un procedimiento
    private boolean AddProcedimiento = false;
    //Variable que determina si estoy editando una categoria o la estoy creando
    private boolean edit = false;
    private Menu menu = null;
    
    /**
     * Creates new form ConfigCatProc
     */
    public ConfigCatProc(Menu menu) {
        initComponents();
        this.menu = menu;
        cargarCategorias();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCategoria = new javax.swing.JLabel();
        boxCategoria = new javax.swing.JComboBox<>();
        btnAddCategoria = new javax.swing.JButton();
        panelEdiciónCat = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNomCat = new javax.swing.JTextField();
        btnEditCat = new javax.swing.JButton();
        panelProcedimientos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProcedimientos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        panelEditProc = new javax.swing.JPanel();
        lblNomProc = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        txtNomProc = new javax.swing.JTextField();
        btnSaveProc = new javax.swing.JButton();
        btnMoveProc = new javax.swing.JButton();
        txtPrecio = new javax.swing.JFormattedTextField();
        btnAddProc = new javax.swing.JButton();
        btnAplicarCambios = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configuración de categorias y procedimientos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        setMaximumSize(new java.awt.Dimension(1000, 500));
        setMinimumSize(new java.awt.Dimension(1000, 500));
        setOpaque(false);

        lblCategoria.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCategoria.setText("Seleccione la categoría:");

        boxCategoria.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boxCategoria.setMinimumSize(new java.awt.Dimension(100, 30));
        boxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxCategoriaItemStateChanged(evt);
            }
        });

        btnAddCategoria.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAddCategoria.setText("Agregar nueva categoria");
        btnAddCategoria.setPreferredSize(new java.awt.Dimension(180, 30));
        btnAddCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoriaActionPerformed(evt);
            }
        });

        panelEdiciónCat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edición de categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        panelEdiciónCat.setEnabled(false);
        panelEdiciónCat.setOpaque(false);

        lblNombre.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre de la categoria:");
        lblNombre.setToolTipText("");
        lblNombre.setEnabled(false);
        lblNombre.setMaximumSize(new java.awt.Dimension(160, 30));
        lblNombre.setMinimumSize(new java.awt.Dimension(160, 30));
        lblNombre.setPreferredSize(new java.awt.Dimension(160, 30));
        lblNombre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        txtNomCat.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNomCat.setToolTipText("Ingrese el nombre de la categoria");
        txtNomCat.setEnabled(false);
        txtNomCat.setMaximumSize(new java.awt.Dimension(250, 30));
        txtNomCat.setMinimumSize(new java.awt.Dimension(250, 30));
        txtNomCat.setPreferredSize(new java.awt.Dimension(250, 30));

        btnEditCat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnEditCat.setText("Editar categoria");
        btnEditCat.setEnabled(false);
        btnEditCat.setPreferredSize(new java.awt.Dimension(170, 32));
        btnEditCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCatActionPerformed(evt);
            }
        });

        panelProcedimientos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Procedimientos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        panelProcedimientos.setEnabled(false);
        panelProcedimientos.setOpaque(false);

        tablaProcedimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProcedimientos.setToolTipText("Presiona para editar");
        tablaProcedimientos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaProcedimientos.setEnabled(false);
        tablaProcedimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProcedimientosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProcedimientos);

        panelEditProc.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Edición de Procedimiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        panelEditProc.setEnabled(false);

        lblNomProc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNomProc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNomProc.setText("Nombre:");
        lblNomProc.setEnabled(false);
        lblNomProc.setPreferredSize(new java.awt.Dimension(55, 20));

        lblPrecio.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPrecio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPrecio.setText("Precio:");
        lblPrecio.setEnabled(false);
        lblPrecio.setPreferredSize(new java.awt.Dimension(55, 20));

        txtNomProc.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNomProc.setToolTipText("Ingrese el nombre del procedimiento");
        txtNomProc.setEnabled(false);
        txtNomProc.setPreferredSize(new java.awt.Dimension(150, 30));

        btnSaveProc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSaveProc.setText("Actualizar");
        btnSaveProc.setToolTipText("Agrega el procedimiento a la categoria activa.");
        btnSaveProc.setEnabled(false);
        btnSaveProc.setMaximumSize(new java.awt.Dimension(104, 35));
        btnSaveProc.setMinimumSize(new java.awt.Dimension(104, 35));
        btnSaveProc.setPreferredSize(new java.awt.Dimension(104, 35));
        btnSaveProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProcActionPerformed(evt);
            }
        });

        btnMoveProc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnMoveProc.setText("Transladar");
        btnMoveProc.setToolTipText("Agrega el procedimiento a la categoria activa.");
        btnMoveProc.setEnabled(false);
        btnMoveProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveProcActionPerformed(evt);
            }
        });

        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPrecio.setEnabled(false);
        txtPrecio.setPreferredSize(new java.awt.Dimension(150, 30));
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelEditProcLayout = new javax.swing.GroupLayout(panelEditProc);
        panelEditProc.setLayout(panelEditProcLayout);
        panelEditProcLayout.setHorizontalGroup(
            panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditProcLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomProc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomProc, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditProcLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveProc)
                .addContainerGap())
        );
        panelEditProcLayout.setVerticalGroup(
            panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditProcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(panelEditProcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoveProc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnAddProc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAddProc.setText("Agregar procedimiento");
        btnAddProc.setEnabled(false);
        btnAddProc.setPreferredSize(new java.awt.Dimension(170, 32));
        btnAddProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProcedimientosLayout = new javax.swing.GroupLayout(panelProcedimientos);
        panelProcedimientos.setLayout(panelProcedimientosLayout);
        panelProcedimientosLayout.setHorizontalGroup(
            panelProcedimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProcedimientosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelProcedimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProcedimientosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddProc, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelEditProc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelProcedimientosLayout.setVerticalGroup(
            panelProcedimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProcedimientosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelProcedimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelProcedimientosLayout.createSequentialGroup()
                        .addComponent(btnAddProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelEditProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAplicarCambios.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAplicarCambios.setText("Aplicar cambios");
        btnAplicarCambios.setToolTipText("Aplica los cambios que se hayan hecho a la categoria activa.");
        btnAplicarCambios.setEnabled(false);
        btnAplicarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarCambiosActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCancel.setText("Cancelar edición");
        btnCancel.setToolTipText("Aplica los cambios que se hayan hecho a la categoria activa.");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("<< Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEdiciónCatLayout = new javax.swing.GroupLayout(panelEdiciónCat);
        panelEdiciónCat.setLayout(panelEdiciónCatLayout);
        panelEdiciónCatLayout.setHorizontalGroup(
            panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEdiciónCatLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelProcedimientos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelEdiciónCatLayout.createSequentialGroup()
                        .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(txtNomCat, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditCat, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEdiciónCatLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAplicarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        panelEdiciónCatLayout.setVerticalGroup(
            panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEdiciónCatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNomCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelProcedimientos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEdiciónCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAplicarCambios)
                        .addComponent(btnCancel))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(lblCategoria)
                .addGap(18, 18, 18)
                .addComponent(boxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelEdiciónCat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(boxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelEdiciónCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cambioBox(){
        if (boxCategoria.getItemCount() > 0) {
            for (Categoria categoria : listaCompleta) {
                if (categoria.getNombre() == boxCategoria.getSelectedItem().toString()) {
                    seleccionado = categoria;
                }
            }
            txtNomCat.setText(seleccionado.getNombre());
            btnEditCat.setEnabled(true);
            cargarProcedimientos();
        }
    }
    
    /**
     * Habilita la edición de una categoria habilitando la interfaz necesaria
     * y establece por medio de "edit" que se editara una categoria existente
     * @param evt clic en el boton de Editar Categoria
     */
    private void btnEditCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCatActionPerformed
        //activación de interfaz
        activarPanelCategoria(true);
        btnAddCategoria.setEnabled(false);
        btnEditCat.setEnabled(false);
        boxCategoria.setEnabled(false);
        edit = true;
    }//GEN-LAST:event_btnEditCatActionPerformed

    /**
     * Habilita la interfaz de usuario para agregar un procedimiento a la categoria
     * que se esta editando. Tambien establece que se esta agregando un nuevo procedimiento
     * con la variable "AddProcedimiento"
     * @param evt clic en el boton Agregar procedimiento
     */
    private void btnAddProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProcActionPerformed
        AddProcedimiento = true;
        activarPanelProcedimiento(true);
        btnAddProc.setEnabled(false);
    }//GEN-LAST:event_btnAddProcActionPerformed

    /**
     * Agrega un procedimiento para editarse que se seleccione en la tabla 
     * @param evt presionar una fila en la tabla.
     */
    private void tablaProcedimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProcedimientosMouseClicked
        if (AddProcedimiento != true) {
            int selected = tablaProcedimientos.getSelectedRow();
            if (selected >= 0) {
                btnAddProc.setEnabled(false);
                activarPanelProcedimiento(true);
                btnMoveProc.setEnabled(true);
                editable = new Procedimiento(0,
                        tablaProcedimientos.getValueAt(selected, 0).toString().trim(),
                        Double.parseDouble(tablaProcedimientos.getValueAt(selected, 1).toString().trim()),
                        seleccionado.getId());
                txtNomProc.setText(editable.getNombre());
                txtPrecio.setText(editable.getPrecio() + "");
            }
        }
    }//GEN-LAST:event_tablaProcedimientosMouseClicked

    /**
     * llama a la función para almacenar el procedimiento en la lista de la categoria
     * que se esta editando/creando y en la tabla al mostrar
     * @param evt clic en el boton Actualizar
     */
    private void btnSaveProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProcActionPerformed
        saveProcedimiento();
    }//GEN-LAST:event_btnSaveProcActionPerformed

    /**
     * Proceso de transladar un procedimiento de una categoria a otra, además de
     * eliminarla de la lista interna de la categoria que se esta editando.
     * @param evt clic en el boton Transladar, solo se activa si se presiona un 
     * item en la lista de procedimientos
     */
    private void btnMoveProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveProcActionPerformed
        String[] categorias = new String[listaCompleta.size()];
        Procedimiento temp = new Procedimiento();
        int categoriaNueva = 0;

        for (int i = 0; i < seleccionado.getProcedimientos().size(); i++) {
            if (seleccionado.getProcedimientos().get(i).getNombre()
                    .equals(editable.getNombre())) {
                temp = seleccionado.getProcedimientos().get(i);
            }
        }
        if (temp.getId() != 0) {
            for (int i = 0; i < listaCompleta.size(); i++) {
                categorias[i] = listaCompleta.get(i).getNombre();
            }
            String seleccion = (String) JOptionPane.showInputDialog(this, "Seleccione la nueva categoria",
                    "Mover procedimiento", JOptionPane.INFORMATION_MESSAGE, null,
                    categorias, categorias[0]);
            if (seleccion != null) {
                for (Categoria categoria : listaCompleta) {
                    if (seleccion.equalsIgnoreCase(categoria.getNombre())) {
                        categoriaNueva = categoria.getId();
                    }
                }
                seleccionado.eliminarProcedimiento(temp.getId());
                access.moverProcedimiento(temp.getId(), categoriaNueva);
                txtNomProc.setText("");
                txtPrecio.setText("");
                activarPanelProcedimiento(AddProcedimiento);
                cargarProcedimientos();
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "No puede transladar un "
                    + "procedimiento que no se haya agregado al sistema aún.",
                    "Operación invalida", 1);
        }
    }//GEN-LAST:event_btnMoveProcActionPerformed

    /**
     * Almacena la información que haya editado o agregado en los controles-
     * @param evt clic en el boton de Aplicar cambios.
     */
    private void btnAplicarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarCambiosActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "Recuerde que si no "
                + "ha aplicado cambios en los procedimientos se perderan.\n"
                + "¿Desea aplicar los cambios a la categoría?", "Almacenar Categoria",
                JOptionPane.INFORMATION_MESSAGE);
        if (respuesta == 0) {
            if (txtNomCat.getText().length() > 0) {
                if (edit == true) {
                    seleccionado.setNombre(txtNomCat.getText().trim());
                    access.actualizarCategoria(seleccionado);
                }else{
                    seleccionado.setNombre(txtNomCat.getText().trim());
                    access.insertarCategoria(seleccionado);  
                }
                reiniciar();
            }else {
                JOptionPane.showMessageDialog(this, "Se detecto vacio el nombre "
                        + "de la Categoria, por favor completelo antes de continuar.",
                        "Se ha detectado campos en blanco", 1);
                
            }
        }      
    }//GEN-LAST:event_btnAplicarCambiosActionPerformed

    /**
     * Inicia el proceso para agregar una categoria nueva
     * @param evt clic en el boton Agregar categoria
     */
    private void btnAddCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoriaActionPerformed
        seleccionado = new Categoria();
        edit = false;
        activarPanelCategoria(true);
        txtNomCat.setText("");
        cargarProcedimientos();
        boxCategoria.setEnabled(false);
        btnEditCat.setEnabled(false);
        btnAddCategoria.setEnabled(false);
    }//GEN-LAST:event_btnAddCategoriaActionPerformed

    /**
     * Invalida el ingreso de letras en el campo de Precio para el procedimiento.
     * @param evt evento que reconoce la tecla tipeada.
     */
    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char c = evt.getKeyChar();        
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    /**
     * Acción que detecta el ingreso de coma o punto, tambien valida que al 
     * presionar enter active la funcion de almacenar un procedimiento.
     * @param evt Evento que se activa al presionar una tecla
     */
    private void txtPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveProcedimiento();
        }
        if (evt.getKeyCode() == KeyEvent.VK_COMMA || 
                evt.getKeyCode() == KeyEvent.VK_DECIMAL ||
                evt.getKeyCode() == KeyEvent.VK_PERIOD) {
            if (txtPrecio.getText().contains(".") == true ||
                    txtPrecio.getText().contains(",") == true) {
                getToolkit().beep();                
                txtPrecio.setText(txtPrecio.getText().substring(0, 
                        txtPrecio.getText().length()-1)); 
            }
        }
    }//GEN-LAST:event_txtPrecioKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        reiniciar();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void boxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxCategoriaItemStateChanged
        cambioBox();
    }//GEN-LAST:event_boxCategoriaItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        menu.intercambiarPaneles(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveProcedimiento() {
        int txtPrecioLenght = txtPrecio.getText().length();
        int txtNomProcLenght = txtNomProc.getText().length();

        if (txtNomProcLenght > 0 && txtPrecioLenght > 0) {
            if (AddProcedimiento == true) {
                editable = new Procedimiento(0,
                        txtNomProc.getText(),
                        Double.parseDouble(txtPrecio.getText().trim()),
                        seleccionado.getId());
                seleccionado.agregarProcedimiento(editable);
                editable = null;
            } else {
                for (int i = 0; i < seleccionado.getProcedimientos().size(); i++) {
                    if (seleccionado.getProcedimientos().get(i).getNombre()
                            .equals(editable.getNombre())) {
                        seleccionado.getProcedimientos().get(i).setNombre(txtNomProc.getText().trim());
                        seleccionado.getProcedimientos().get(i).setPrecio(Double.parseDouble(txtPrecio.getText().trim()));
                    }
                }
            }
            activarPanelProcedimiento(false);
            AddProcedimiento = false;
            txtNomProc.setText("");
            txtPrecio.setText("");
            btnAddProc.setEnabled(true);
            cargarProcedimientos();
        }else{
            JOptionPane.showMessageDialog(this, "Se ha detectado que hay espacios en blanco, por favor completelos para continuar.", "Espacios vacios", 1);
        }        
    }
    
    private void cargarProcedimientos(){
        tablaProcedimientos.setModel(new DefaultTableModel());
        String datos[] = new String[2];
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Nombre");
        model.addColumn("Precio");
        
        if (seleccionado.getProcedimientos() != null) {
            for (Procedimiento procedimiento : seleccionado.getProcedimientos()) {
                datos[0] = procedimiento.getNombre();
                datos[1] = "" + procedimiento.getPrecio();
                model.addRow(datos);
            }
            tablaProcedimientos.setModel(model);
        }    
        centrarColumans();
    }
    
    private void activarPanelProcedimiento(boolean valor){
        txtNomProc.setEnabled(valor);
        txtPrecio.setEnabled(valor);
        prepararFormato(txtPrecio);
        btnSaveProc.setEnabled(valor);
        lblNomProc.setEnabled(valor);
        lblPrecio.setEnabled(valor);
        panelEditProc.setEnabled(valor);
        if (AddProcedimiento == false && edit == true) {
            btnMoveProc.setEnabled(valor);
        }
    }
    
    private void activarPanelCategoria(boolean valor){
        btnAplicarCambios.setEnabled(valor);
        btnCancel.setEnabled(valor);
        btnAddProc.setEnabled(valor);
        tablaProcedimientos.setEnabled(valor);
        txtNomCat.setEnabled(valor);
        lblNombre.setEnabled(valor);
        panelEdiciónCat.setEnabled(valor);
        panelProcedimientos.setEnabled(valor);       
    }
    
    private void reiniciar() {
        activarPanelCategoria(false);
        activarPanelProcedimiento(false);
        boxCategoria.setEnabled(true);
        txtNomProc.setText("");
        txtPrecio.setText("");
        btnMoveProc.setEnabled(false);
        btnAddCategoria.setEnabled(true);
        cargarCategorias();
    }
    
    private void prepararFormato(JFormattedTextField txt){
        NumberFormat formato = DecimalFormat.getInstance();
        formato.setMaximumFractionDigits(2);
        formato.setMinimumFractionDigits(0);
        txt = new JFormattedTextField(formato);
        txt.setValue(0.00);
    }

    private void cargarCategorias() {
        try {
            boxCategoria.setEnabled(true);
            //int count = boxCategoria.getItemCount();
            //for (int i = 0; i < count; i++) {
            //    boxCategoria.removeItemAt(0);
            //}
            boxCategoria.removeAllItems();
            listaCompleta = access.obtenerCategorias();
            if (listaCompleta.size() != 0) {
                for (Categoria categoria : listaCompleta) {
                    boxCategoria.addItem(categoria.getNombre());
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se ha cargado anteriormente categorias", "Lista vacia", 1);
            }

        } catch (Exception e) {
            System.out.println(">> " + e.getMessage());
        }
    }
    
    /** centrarColumnas
     * Centra el contenido de las celdas en la tabla
     */
    private void centrarColumans() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tablaProcedimientos.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tablaProcedimientos.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCategoria;
    private javax.swing.JButton btnAddCategoria;
    private javax.swing.JButton btnAddProc;
    private javax.swing.JButton btnAplicarCambios;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEditCat;
    private javax.swing.JButton btnMoveProc;
    private javax.swing.JButton btnSaveProc;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblNomProc;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JPanel panelEdiciónCat;
    private javax.swing.JPanel panelEditProc;
    private javax.swing.JPanel panelProcedimientos;
    private javax.swing.JTable tablaProcedimientos;
    private javax.swing.JTextField txtNomCat;
    private javax.swing.JTextField txtNomProc;
    private javax.swing.JFormattedTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
